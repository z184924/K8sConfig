apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 3306
      name: server
      targetPort: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: default
spec:
  serviceName: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      containers:
        - name: mysql
          imagePullPolicy: IfNotPresent
          image: mysql:8.0.39
          ports:
            - containerPort: 3306
              name: server
          resources:
            requests:
              cpu: 2
              memory: 8Gi
            limits:
              cpu: 4
              memory: 16Gi
          env:
          - name:  "MYSQL_ROOT_PASSWORD"
            value: "root"
          volumeMounts:
            - name: mysql-config-volume
              mountPath: /etc/mysql/conf.d/
            - name: mysql-storage-volume
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-config-volume
        - name: mysql-storage-volume
  volumeClaimTemplates:
    - metadata:
        name: mysql-storage-volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 500Gi
        storageClassName: default
        volumeMode: Filesystem
    - metadata:
        name: mysql-config-volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: default
        volumeMode: Filesystem
  selector:
    matchLabels:
      app: mysql